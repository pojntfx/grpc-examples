name: Docker CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - {
              dir: gomather,
              image: pojntfx/gomather,
              arch: "linux/amd64,linux/arm64/v8",
            }
          - {
              dir: mather-rs,
              image: pojntfx/mather-rs,
              arch: "linux/amd64,linux/arm64/v8",
            }
          - {
              dir: mather.js,
              image: pojntfx/mather-js,
              arch: "linux/amd64,linux/arm64/v8",
            }
          - {
              dir: MatherNet,
              image: pojntfx/mathernet,
              arch: "linux/amd64,linux/arm64/v8",
            }
          - {
              dir: pymather,
              image: pojntfx/pymather,
              arch: "linux/amd64,linux/arm64/v8",
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      # - name: Build and push image to Docker Hub
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ${{ matrix.project.dir }}
      #     file: ${{ matrix.project.dir }}/Dockerfile
      #     platforms: ${{ matrix.project.arch }}
      #     push: true
      #     tags: ${{ matrix.project.image }}:latest

  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux
    strategy:
      matrix:
        project:
          - {
              name: gomather,
              version: 0.0.1,
              dir: gomather/charts/gomather,
              registry: ghcr.io,
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and publish chart to GitHub Container Registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: appany/helm-oci-chart-releaser@v0.2.0
        with:
          name: ${{ matrix.project.name }}
          repository: ${{ github.repository_owner }}-${{ github.event.repository.name }}
          tag: ${{ matrix.project.version }}
          path: ${{ matrix.project.dir }}
          registry: ${{ matrix.project.registry }}
          registry_username: ${{ github.repository_owner }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
