name: Docker CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        project:
          - src: gomather
            image: ghcr.io/pojntfx/gomather
            arch: "linux/amd64"
            # arch: "linux/amd64,linux/arm64/v8"
          - src: mather-rs
            image: ghcr.io/pojntfx/mather-rs
            arch: "linux/amd64"
            # arch: "linux/amd64,linux/arm64/v8"
          - src: mather.js
            image: ghcr.io/pojntfx/mather-js
            arch: "linux/amd64"
            # arch: "linux/amd64,linux/arm64/v8"
          - src: MatherNet
            image: ghcr.io/pojntfx/mathernet
            arch: "linux/amd64"
            # arch: "linux/amd64,linux/arm64/v8"
          - src: pymather
            image: ghcr.io/pojntfx/pymather
            arch: "linux/amd64"
            # arch: "linux/amd64,linux/arm64/v8"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.project.image }}
          tags: type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.project.src }}
          file: ${{ matrix.project.src }}/Dockerfile
          platforms: ${{ matrix.project.arch }}
          push: false
          tags: ${{ matrix.project.image }}:unstable
          labels: ${{ steps.meta.outputs.labels }}
      - name: Push pre-release image to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.project.src }}
          file: ${{ matrix.project.src }}/Dockerfile
          platforms: ${{ matrix.project.arch }}
          push: true
          tags: ${{ matrix.project.image }}:unstable
          labels: ${{ steps.meta.outputs.labels }}
      - name: Push release image to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.project.src }}
          file: ${{ matrix.project.src }}/Dockerfile
          platforms: ${{ matrix.project.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux
    strategy:
      max-parallel: 1 # Prevent merge conflicts when pushing concurrently
      matrix:
        project:
          - gomather/charts
          - mather-rs/charts
          - mather.js/charts
          - MatherNet/charts
          - pymather/charts

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and publish chart
        uses: stefanprodan/helm-gh-pages@master
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.HELM_REPO_GITHUB_TOKEN }}
          charts_dir: ${{ matrix.project }}
          charts_url: https://pojntfx.github.io/charts/
          owner: pojntfx
          repository: charts
          branch: gh-pages
